# this is an example of the Uber API
# as a demonstration of an API spec in YAML
swagger: '2.0'
info:
  title: FilmList API
  description: List and rate your favourite films.
  version: "1.0.0"
# the domain of the service
host: api.myfilmlist.com
# array of all schemes that your API supports
schemes:
  - https
# will be prefixed to all paths
basePath: /v1
produces:
  - application/json
paths:
  /films:
    get:
      summary: Films
      description: |
        The Films endpoint returns information about the available films. The response includes the film name, rating
        and other details about the film, and lists the products in the
        proper display order.
      tags:
        - Films
      responses:
        200:
          description: List of every film.
          schema:
            type: array
            items:
              $ref: '#/definitions/Film'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /me:
    get:
      summary: User Profile
      description: The User Profile endpoint returns information about the user that has authorized with the application.
      tags:
        - User
      responses:
        200:
          description: Profile information for a user
          schema:
            $ref: '#/definitions/Profile'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /mylist:
    get:
      summary: Profile specific film list.
      description: Returns a list of films that the user has marked as seen.
      tags:
        - Films
      responses:
        200:
          description: List of films that the user has seen.
          schema:
            type: array
            items:
              $ref: '#/definitions/Profile'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /update:
    post:
      summary: Update film rating.
      description: Updates the current rating of a given film.
      tags:
        - Films
      responses:
        200:
          description: Rating updated successfully.
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
definitions:
  Film:
    type: object
    properties:
      film_id:
        type: integer
        description: Unique identifier representing a specific film.
      description:
        type: string
        description: Description of film.
      display_name:
        type: string
        description: Display name of film.
      rating:
        type: integer
        description: Rating of film.
      image:
        type: string
        description: Image URL representing the film.
  Profile:
    type: object
    properties:
      username:
        type: string
        description: Username.
      email:
        type: string
        description: Email address of the user.
      password:
        type: string
        description: Password of the user.
      films:
        type: array
        items:
          $ref: '#/definitions/Film'
  Error:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      fields:
        type: string
